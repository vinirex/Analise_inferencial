from matplotlib import pyplot as plt
import streamlit as st
import pandas as pd
import numpy as np
import scipy.stats as stats
import seaborn as sns
from streamlit_extras.app_logo import add_logo


# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Exporta√ß√£o Brasileira", layout="wide")

# Criando as p√°ginas
menu = ["Home üè†", "Dados üìä", "Entendimentos üìà", "An√°lise üìã"]
escolha = st.sidebar.radio("", menu)

# Sess√£o de Colaboradores
st.sidebar.title("Colaboradores ü§ù")
colaboradores = [
    {"nome": "Vinicius Silva - RM553240", "foto": "vinicius.jpg"},
    {"nome": "Diogo Julio - RM553837", "foto": "diogo.jpg"},
    {"nome": "Jonata Rafael - RM552939", "foto": "jonata.jpg"},
    {"nome": "Victor Didoff - RM552965", "foto": "didoff.jpg"},
    {"nome": "Matheu Zottis - RM94119", "foto": "zottis.jpg"},
]

for colaborador in colaboradores:
    st.sidebar.image(colaborador["foto"], width=50)
    st.sidebar.write(colaborador["nome"])
# Informa√ß√µes de contato na barra lateral
st.sidebar.title("Contato üì¨")
st.sidebar.info("""
**Autor:** Vinicius Silva  
**Projeto:** Data Science e Estat√≠stica   
**LinkedIn:** [LinkedIn](https://www.linkedin.com/in/-vini-silva/)  
**GitHub:** [GitHub](https://github.com/vinirex)
""")

# Carregar os dados
file_path = "Exporta√ß√£o_Brasileira_Anual.xlsx"  # Substitua pelo caminho real do arquivo
df = pd.read_excel(file_path)

if escolha == "Home üè†":
    st.title("Exporta√ß√£o Brasileira")
    st.image("porto-de-santos.jpg", use_container_width=True)
    st.write("""
    A exporta√ß√£o √© um dos principais motores da economia brasileira, abrangendo diversos setores, 
    desde produtos agr√≠colas at√© manufaturados e bens de capital. Entender os dados da exporta√ß√£o 
    nos ajuda a compreender as tend√™ncias econ√¥micas, os desafios e as oportunidades do Brasil no com√©rcio global.
    """)
    
    st.subheader("Sobre os Dados")
    st.write("""
    O dataset utilizado cont√©m informa√ß√µes detalhadas sobre a exporta√ß√£o brasileira. Algumas das colunas presentes incluem:
    - **Data**: O per√≠odo da exporta√ß√£o registrado no dataset.
    - **Valor_BK, Valor_BI, Valor_BC, Valor_CL**: Representam os valores exportados em diferentes categorias de produtos.
    - **VarBK, VarBI, VarBC, VarCL**: Vari√°veis que mostram as varia√ß√µes percentuais nos valores exportados.
    - **Part_BK, Part_BI, Part_BC, Part_CL**: Representam a participa√ß√£o percentual de cada categoria no total exportado.
    """)
    
    st.subheader("Perguntas que os dados podem responder")
    st.write("""
    - Como os valores exportados variaram ao longo dos anos?
    - Quais produtos apresentam maior crescimento em exporta√ß√µes?
    - Existe uma sazonalidade nas exporta√ß√µes?
    - Como diferentes categorias de produtos contribuem para o total exportado?
    """)
    
elif escolha == "Dados üìä":
    st.title("Dados de Exporta√ß√£o Brasileira")
    
    st.subheader("Explica√ß√£o das Colunas")
    st.write("""
    - **Data**: Representa o per√≠odo da exporta√ß√£o (provavelmente em anos).
    - **Valor_BK**: Exporta√ß√µes de Bens de Capital (m√°quinas, equipamentos industriais).
    - **Valor_BI**: Exporta√ß√µes de Bens Intermedi√°rios (insumos usados na produ√ß√£o).
    - **Valor_BC**: Exporta√ß√µes de Bens de Consumo (produtos finais como eletrodom√©sticos).
    - **Valor_CL**: Exporta√ß√µes de Combust√≠veis e Lubrificantes.
    - **VarBK, VarBI, VarBC, VarCL**: Varia√ß√£o percentual das exporta√ß√µes comparada ao per√≠odo anterior.
    - **Part_BK, Part_BI, Part_BC, Part_CL**: Participa√ß√£o percentual de cada categoria no total das exporta√ß√µes.
    """)

    # Filtro pela primeira coluna
    primeira_coluna = df.columns[0]
    valores_unicos = df[primeira_coluna].unique()
    filtro = st.selectbox(f"Filtrar por {primeira_coluna}", ["Todos"] + list(valores_unicos))

    if filtro != "Todos":
        df = df[df[primeira_coluna] == filtro]
    
    st.write("Aqui est√£o os dados utilizados para an√°lise:")
    st.dataframe(df.head())
    
    st.subheader("M√©dia, Moda e Mediana")
    colunas_numericas = df.select_dtypes(include=[np.number])
    media = colunas_numericas.mean()
    moda = colunas_numericas.mode().iloc[0]
    mediana = colunas_numericas.median()
    
    st.write("**M√©dia**: Representa o valor m√©dio das exporta√ß√µes.")
    st.write(media)
    
    st.write("**Moda**: O valor mais frequente nos dados.")
    st.write(moda)
    
    st.write("**Mediana**: O valor central dos dados ordenados.")
    st.write(mediana)

elif escolha == "Entendimentos üìà":
    st.title("An√°lises Estat√≠sticas e Entendimentos")
    
    st.subheader("Intervalos de Confian√ßa")
    st.write("""
    O intervalo de confian√ßa √© uma t√©cnica estat√≠stica que nos permite estimar a varia√ß√£o prov√°vel dos dados.
    Aqui, aplicamos essa abordagem para compreender a varia√ß√£o nos valores das exporta√ß√µes brasileiras ao longo do tempo.
    """)
    
    # Selecionar colunas num√©ricas relacionadas a valores
    colunas_valor = [col for col in df.columns if "valor" in col.lower()]
    colunas_numericas = df[colunas_valor]

    # C√°lculo de Intervalo de Confian√ßa
    confianca = 0.95
    intervalos = {}
    for coluna in colunas_numericas.columns:
        media_coluna = colunas_numericas[coluna].mean()
        desvio_padrao = colunas_numericas[coluna].std()
        n = len(colunas_numericas[coluna])
        intervalo = stats.t.interval(confianca, df=n-1, loc=media_coluna, scale=desvio_padrao/np.sqrt(n))
        intervalos[coluna] = intervalo
    
    # Criar um DataFrame para visualiza√ß√£o
    intervalos_df = pd.DataFrame(intervalos, index=["Limite Inferior", "Limite Superior"]).T
    intervalos_df["M√©dia"] = colunas_numericas.mean()

    # Plotar os intervalos de confian√ßa
    st.subheader("Intervalos de Confian√ßa para Colunas de Valor")
    st.write("O gr√°fico abaixo mostra os intervalos de confian√ßa de 95% para cada m√©trica de valor.")
    st.bar_chart(intervalos_df[["Limite Inferior", "M√©dia", "Limite Superior"]])
    
    # Interpreta√ß√£o dos resultados
    st.write("""
    - Se o intervalo de confian√ßa for muito amplo, indica maior incerteza nos valores exportados.
    - Se o intervalo for estreito, significa que as exporta√ß√µes tendem a ser mais consistentes ao longo do tempo.
    - Comparar os intervalos entre diferentes categorias pode revelar tend√™ncias importantes sobre os setores mais est√°veis.
    """)
    
if escolha == "An√°lise üìã":
    st.title("An√°lise Estat√≠stica das Exporta√ß√µes")
    
    
    st.subheader("Formula√ß√£o de Hip√≥teses")
    st.write("""
    Para avaliar a varia√ß√£o das exporta√ß√µes brasileiras, formulamos as seguintes hip√≥teses:
    - **Hip√≥tese Nula (H‚ÇÄ)**: N√£o h√° diferen√ßa significativa nos valores m√©dios das exporta√ß√µes ao longo do tempo.
    - **Hip√≥tese Alternativa (H‚ÇÅ)**: Existe uma diferen√ßa significativa nos valores m√©dios das exporta√ß√µes ao longo do tempo.
    """)
    
    # Escolher uma coluna de valores para an√°lise
    coluna_valor = "Valor_BK"  # Escolha uma coluna num√©rica do dataset
    valores = df[coluna_valor].dropna()
    
    # Teste t para verificar se a m√©dia das exporta√ß√µes difere significativamente de um valor hipot√©tico
    media_teorica = valores.mean() * 0.9  # Testamos se a m√©dia atual difere 10% de um valor hipot√©tico
    t_stat, p_valor = stats.ttest_1samp(valores, media_teorica)
    
    st.subheader("Teste t para uma amostra")
    st.write("""
    O **teste t para uma amostra** verifica se a m√©dia das exporta√ß√µes de Bens de Capital (Valor_BK) 
    difere significativamente de um valor hipot√©tico. Se o valor-p for menor que 0.05, rejeitamos a hip√≥tese nula.
    """)
    st.write(f"Estat√≠stica t: {t_stat:.4f}")
    st.write(f"Valor-p: {p_valor:.4f}")
    
    if p_valor < 0.05:
        st.write("Rejeitamos H‚ÇÄ: H√° evid√™ncias de que as exporta√ß√µes de Bens de Capital mudaram significativamente.")
    else:
        st.write("Falhamos em rejeitar H‚ÇÄ: N√£o h√° evid√™ncias suficientes para afirmar que as exporta√ß√µes mudaram.")
    
    # Teste Qui-Quadrado para verificar a distribui√ß√£o dos valores de exporta√ß√£o
    st.subheader("Teste Qui-Quadrado")
    st.write("""
    O **teste Qui-Quadrado** analisa a distribui√ß√£o dos valores de exporta√ß√£o dentro de categorias.
    Se o valor-p for menor que 0.05, a distribui√ß√£o n√£o √© uniforme, indicando maior concentra√ß√£o em algumas categorias.
    """)
    df["Faixa de Valor"] = pd.qcut(df[coluna_valor], q=4, labels=["Baixo", "M√©dio-Baixo", "M√©dio-Alto", "Alto"])
    contagem_faixas = df["Faixa de Valor"].value_counts()
    chi2, p_chi = stats.chisquare(contagem_faixas)
    
    st.write(f"Estat√≠stica Qui-Quadrado: {chi2:.4f}")
    st.write(f"Valor-p: {p_chi:.4f}")
    
    if p_chi < 0.05:
        st.write("Rejeitamos H‚ÇÄ: A distribui√ß√£o dos valores de exporta√ß√£o n√£o √© uniforme.")
    else:
        st.write("Falhamos em rejeitar H‚ÇÄ: N√£o h√° evid√™ncias suficientes para afirmar que os valores est√£o distribu√≠dos de forma desigual.")
    
    # Responder √†s perguntas formuladas na aba Home
    st.subheader("Respostas √†s Perguntas")
    st.write("""
    1. **As exporta√ß√µes brasileiras cresceram ao longo do tempo?**
       - O teste t indica que a m√©dia das exporta√ß√µes de Bens de Capital pode ter sofrido mudan√ßas significativas, sugerindo crescimento ou varia√ß√£o relevante.
    
    2. **Quais setores contribuem mais para a exporta√ß√£o total?**
       - O teste Qui-Quadrado mostra que as exporta√ß√µes n√£o s√£o uniformes entre categorias, indicando que setores como Bens de Capital e Bens Intermedi√°rios dominam.
    
    3. **Existe sazonalidade nas exporta√ß√µes?**
       - A an√°lise sugere varia√ß√µes nos valores exportados ao longo do tempo, mas uma an√°lise de s√©ries temporais seria necess√°ria para confirmar padr√µes sazonais.
    """)
    
    # Visualiza√ß√£o dos resultados
    st.subheader("Visualiza√ß√£o dos Resultados")
    fig, ax = plt.subplots(figsize=(10, 5))
    sns.histplot(valores, bins=30, kde=True, ax=ax)
    ax.axvline(media_teorica, color='red', linestyle='dashed', label='M√©dia Te√≥rica')
    ax.axvline(valores.mean(), color='blue', linestyle='dashed', label='M√©dia Observada')
    ax.legend()
    st.pyplot(fig)
    
    st.subheader("Poss√≠veis Explica√ß√µes")
    st.write("""
    - Mudan√ßas na demanda global podem ter impulsionado ou reduzido exporta√ß√µes.
    - Pol√≠tica econ√¥mica, incentivos fiscais e tarifas de importa√ß√£o podem ter influenciado os setores exportadores.
    - Fatores como crises econ√¥micas, pandemias e conflitos geopol√≠ticos tamb√©m impactam o volume e a distribui√ß√£o das exporta√ß√µes.
    """)

